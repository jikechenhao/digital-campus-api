<?xml version="1.0" encoding="UTF-8"?>
<!-- 通过定义多种schema模型引用不同的标签，schema存在的位置在*.xsd中明确定义 -->
<beans
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.springframework.org/schema/beans"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 自己的jobbean
     -->
    <bean id="flowerJob" class="com.hwedu.task.FlowerTask"/>
    <!-- job的配置开始
         targetObject:指定job的实现bean
         targetMethod:指定job的实现方法
         concurrent：设置为false表示同步，true表示异步；同一个触发器多个job一起运行的情况下使用
     -->
    <bean id="flowerJobDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="flowerJob"/>
        </property>
        <property name="targetMethod">
            <value>work</value>
        </property>
        <property name="concurrent" value="false"></property>
    </bean>
    <!-- 调度的cron表达式配置 -->
    <bean id="flowerTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="flowerJobDetail"/>
        </property>
        <!-- Cron表达式“10 */1 * * * ?”意为：从10秒开始，每1分钟执行一次。  -->
        <property name="cronExpression">
            <value>10 0/1 * * * ?</value>
        </property>

    </bean>
    <!-- 启动触发器的配置
          lazy-init： 通常spring启动会立即加载bean,如果设置为true则启动时不实例化对象
           autowire： 有如下5种配置方法：
              1：no          默认的方式是不进行自动装配，通过手工设置ref 属性来进行装配bean
             2：byName      通过参数名 自动装配，如果一个bean的name 和另外一个bean的 property 相同，就自动装配。
             3：byType      通过参数的数据类型自动自动装配，如果一个bean的数据类型和另外一个bean的property属性的数据类型兼容，就自动装配
             4：construct   构造方法中的参数通过byType的形式，自动装配。
             5：autodetect  如果有默认的构造方法，通过 construct的方式自动装配，否则使用 byType的方式自动装配
       -->
    <bean name="scheduler" lazy-init="false" autowire="no"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="flowerTrigger"/>
            </list>
        </property>
    </bean>
    <!-- 启动触发器的配置结束 -->
    <!-- 文件上传配置，class是servlet3.0版本 <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
        <property name="maxUploadSize" value="100000"/> </bean> -->
</beans>