#----------------druid配置----------------
#数据库驱动类
druid.driverClassName=org.postgresql.Driver
#连接字符串
druid.url=jdbc:postgresql://192.168.117.65:5432/digital_campus
#登录用户名
druid.username=postgres
#登录密码
druid.password=postgres
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
#监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
druid.filters=stat,wall
#配置项中指定了各个参数后，在连接池内部是这么使用这些参数的。
#数据库连接池在初始化的时候会创建initialSize个连接，当有数据库操作时，会从池中取出一个连接。
#如果当前池中正在使用的连接数等于maxActive，则会等待一段时间，等待其他操作释放掉某一个连接。
#如果这个等待时间超过了maxWait，则会报错；如果当前正在使用的连接数没有达到maxActive，则判断当前是否空闲连接。
#如果有则直接使用空闲连接，如果没有则新建立一个连接。
#在连接使用完毕后，不是将其物理连接关闭，而是将其放入池中等待其他操作复用。
#同时连接池内部有机制判断，如果当前的总的连接数少于minIdle，则会建立新的空闲连接，以保证连接数得到minIdle。
#如果当前连接池中某个连接在空闲了timeBetweenEvictionRunsMillis时间后任然没有使用，则被物理性的关闭掉。
#有些数据库连接的时候有超时限制（mysql连接在8小时后断开），或者由于网络中断等原因，连接池的连接会出现失效的情况。
#这时候设置一个testWhileIdle参数为true，可以保证连接池内部定时检测连接的可用性，不可用的连接会被抛弃或者重建，最大情况的保证从连接池中得到的Connection对象是可用的。
#当然，为了保证绝对的可用性，你也可以使用testOnBorrow为true（即在获取Connection对象时检测其可用性），不过这样会影响性能。
#初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
druid.initialSize=10
#最大连接池数量
druid.maxActive=50
#最小连接池数量
druid.minIdle=10
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
druid.maxWait=60000
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
druid.poolPreparedStatements:true
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
#在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
druid.maxOpenPreparedStatements:20
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
druid.validationQuery:SELECT 1
#单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
druid.validationQueryTimeout:10
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
druid.testOnBorrow:false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
druid.testOnReturn:false
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
druid.testWhileIdle:true
#有两个含义：
#1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接
#2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
druid.timeBetweenEvictionRunsMillis:60000
#连接保持空闲而不被驱逐的最长时间
druid.minEvictableIdleTimeMillis:300000

